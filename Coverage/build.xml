<!-- Sample Ant build file for running IglooScore under JaCoCo -->
<!-- Jonathan Cook, 17 Sep 2015 -->
<project name="racingscore" default="jacocoreport" xmlns:jacoco="antlib:org.jacoco.ant">

   <!-- property to allow ant to find jacoco: CHANGE THE PATH to point to yours -->
   <property name="jacocodir" location="./lib"/>
   <property name="src" location="src" />
   <property name="bin" location="bin" />

   <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="${jacocodir}/jacocoant.jar"/>
   </taskdef>

   <target name="init" > 
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${bin}"/>
    </target>

   <!-- standard compile task, but turn debugging on for source viewing -->
   <target name="compile" description="compile the source" depends="init">
      <javac srcdir="${src}" includeantruntime="false" debug="true" destdir="bin"/>
   </target>

   <!-- tests if new jacoco run is needed by checking if the jacoco.exec file is
        newer than the class files or this build file -->
   <target name="checkRun">
      <uptodate property="run.notneeded" targetfile="jacoco.exec">
         <srcfiles dir="." includes="*.class build.xml" />
      </uptodate>
   </target>

   <!-- run program under jacoco: this example has two runs, you'll need to perhaps
        modify them, and then add more; this only runs if needed -->
   <target name="jacocorun" depends="compile,checkRun" unless="run.notneeded">
      <delete>
         <!-- must delete coverage data file to start afresh (otherwise coverage accumulates) -->
         <fileset dir="." includes="jacoco.exec"/>
      </delete>
      <echo message="TEST RacingScore1: 8 9 6"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore1" classpath="bin" fork="true">
         <arg value="8"/><arg value="9"/><arg value="6"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore1: 9 8 6"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore1" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/><arg value="6"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore1: 9 8 10"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore1" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/><arg value="10"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore1: 9 8"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore1" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore1: 9 8 a"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore1" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/><arg value="a"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s1 < s2 && s1 < s3 && s2 < s3-->
      <echo message="TEST RacingScore2: 8 9 10"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="8"/><arg value="9"/><arg value="10"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s2 < s1 && s2 < s3 && s1 < s3-->
      <echo message="TEST RacingScore2: 9 8 10"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/><arg value="10"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s3 < s1 && s3 < s2 && s1 < s2-->
      <echo message="TEST RacingScore2: 8 9 7"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="8"/><arg value="9"/><arg value="7"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s3 < s1 && s3 < s2 && s1 > s2-->
      <echo message="TEST RacingScore2: 9 8 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="8"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s3 < s1 && s3 < s2 && s1 > s2-->
      <echo message="TEST RacingScore2: 9 2 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="2"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <!-- s2 == s1 && s2 == s3 && s1 == s3-->
      <echo message="TEST RacingScore2: 9 9 9"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="9"/><arg value="9"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 9"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="9"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 a 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="a"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: -9 2 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="-9"/><arg value="2"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 90 2 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="90"/><arg value="2"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 -2 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="-2"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 200 2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="200"/><arg value="2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 2 -2"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="2"/><arg value="-2"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2: 9 2 200"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <arg value="9"/><arg value="2"/><arg value="200"/>
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      <echo message="TEST RacingScore2:"/>
      <java classname="edu.nmsu.cs.scoring.RacingScore2" classpath="bin" fork="true">
         <jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      </java>
      
   </target>

   <!-- tests if new jacoco report needs generated by checking if top report file
        (index.html) is newer than the run data file (jacoco.exec) -->
   <target name="checkReport">
      <uptodate property="report.notneeded" targetfile="report/index.html" srcfile="jacoco.exec" />
   </target>

   <!-- generate a new jacoco report from a new data file; only runs if needed -->
   <target name="jacocoreport" depends="jacocorun,checkReport" unless="report.notneeded">
      <jacoco:report>
         <executiondata>
            <file file="jacoco.exec"/>
         </executiondata>
         <structure name="racingscore">
            <classfiles>
               <fileset dir="bin"/>
            </classfiles>
            <sourcefiles encoding="UTF-8">
               <fileset dir="."/>
            </sourcefiles>
         </structure>
         <html destdir="report"/>
      </jacoco:report>
   </target>

   <!-- clean up by removing all generated files; do "ant clean" to start afresh -->
   <target name="clean">
      <delete>
         <fileset dir="." includes="*.class jacoco.exec"/>
      </delete>
      <delete dir="report" />
      <delete dir="${bin}"/>
   </target>

</project>

