<!-- Sample Ant build file for running IglooScore under JaCoCo -->
<!-- Jonathan Cook, 17 Sep 2015 -->
<project name="iglooscore" default="jacocoreport" xmlns:jacoco="antlib:org.jacoco.ant">

   <property name="jacocodir" location="lib/" />
   <property name="build-direction" location="bin/" />
   <property name="results" location="./target" />
	<property name="report" location="${results}/site/jacoco" />
	<property name=".exec.file" location="${results}/jacoco.exec" />

   <!-- property to allow ant to find jacoco: CHANGE THE PATH to point to yours -->
   <property name="jacocodir" location="./lib"/>

   <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="${jacocodir}/jacocoant.jar"/>
   </taskdef>

   <!-- standard compile task, but turn debugging on for source viewing -->
   <target name="compile" depends="clean" description="compile the source">
      <mkdir dir="${build-direction}" />
      <javac srcdir="." destdir="${build-direction}" includeantruntime="false" debug="true"/>
   </target>

   <!-- tests if new jacoco run is needed by checking if the jacoco.exec file is
        newer than the class files or this build file -->
   <target name="checkRun">
      <uptodate property="run.notneeded" targetfile="${.exec.file}">
         <srcfiles dir="." includes="*.class build.xml" />
      </uptodate>
   </target>

   <!-- run program under jacoco: this example has two runs, you'll need to perhaps
        modify them, and then add more; this only runs if needed -->
   <target name="jacocorun" depends="compile,checkRun" unless="run.notneeded">
      <delete>
         <!-- must delete coverage data file to start afresh (otherwise coverage accumulates) -->
         <fileset dir="." includes="${.exec.file}"/>
      </delete>
      <echo message= "run needed..."/>

      <!-- Test RacingScore1 -->
      <!-- score1 is smaller than score2 -->
      <echo message="TEST RacingScore1: 6 8 9"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore1" fork="true">
         <classpath path="bin"/>
         <arg value="6"/><arg value="8"/><arg value="9"/>
      </java>
      </jacoco:coverage>
      
      <!-- score1 is not smaller than score2 -->
      <echo message="TEST RacingScore1: 8 6 9"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore1" fork="true">
         <classpath path="bin"/>
         <arg value="8"/><arg value="6"/><arg value="9"/>
      </java>
      </jacoco:coverage>

      <!-- score3 is smaller than score1 and score2 -->
      <echo message="TEST RacingScore1: 8 9 6"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore1" fork="true">
         <classpath path="bin"/>
         <arg value="8"/><arg value="9"/><arg value="6"/>
      </java>
      </jacoco:coverage>

      <!-- ars.length is not equal to 3 -->
      <echo message="TEST RacingScore1: 5 2"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore1" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="2"/>
      </java>
      </jacoco:coverage>

      <!-- arg is not integer -->
      <echo message="TEST RacingScore1: 8 9 hello"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore1" fork="true">
         <classpath path="bin"/>
         <arg value="8"/><arg value="9"/><arg value="hello"/>
      </java>
      </jacoco:coverage>

      <!-- Test RacingScore2 -->
      <!-- score1 < score2 && score1 < score3 -->
      <echo message="TEST RacingScore2: 12 15 19"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="12"/><arg value="15"/><arg value="19"/>
      </java>
      </jacoco:coverage>

      <!-- score1 < score2 but score1 > score3 -->
      <echo message="TEST RacingScore2: 12 15 9"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="12"/><arg value="15"/><arg value="9"/>
      </java>
      </jacoco:coverage>

      <!-- score2 < score1 && score2 < score3 -->
      <echo message="TEST RacingScore2: 9 5 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="9"/><arg value="5"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- score2 < score1 but score2 > score3 -->
      <echo message="TEST RacingScore2: 9 5 3"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="9"/><arg value="5"/><arg value="3"/>
      </java>
      </jacoco:coverage>

      <!-- score3 < score1 but score3 > score2 -->
      <echo message="TEST RacingScore2: 9 5 7"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="9"/><arg value="5"/><arg value="7"/>
      </java>
      </jacoco:coverage>

      <!-- Test "else" in line 54. All scores are equal together. -->
      <echo message="TEST RacingScore2: 5 5 5"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="5"/><arg value="5"/>
      </java>
      </jacoco:coverage>

      <!-- args == null -->
      <echo message="TEST RacingScore2: null"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
      </java>
      </jacoco:coverage>

      <!-- args.length != 3 -->
      <echo message="TEST RacingScore2: 4 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="4"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- arg is not integer -->
      <echo message="TEST RacingScore2: 10 apple 15"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="10"/><arg value="apple"/><arg value="15"/>
      </java>
      </jacoco:coverage>

      <!-- s1 < 0 -->
      <echo message="TEST RacingScore2: -23 9 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="-23"/><arg value="9"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- s1 > 50 -->
      <echo message="TEST RacingScore2: 135 9 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="135"/><arg value="9"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- s2 < 0 -->
      <echo message="TEST RacingScore2: 5 -12 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="-12"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- s2 > 50 -->
      <echo message="TEST RacingScore2: 5 69 37"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="69"/><arg value="37"/>
      </java>
      </jacoco:coverage>

      <!-- s3 < 0 -->
      <echo message="TEST RacingScore2: 5 20 -6"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="20"/><arg value="-6"/>
      </java>
      </jacoco:coverage>

      <!-- s3 > 50  -->
      <echo message="TEST RacingScore2: 5 20 53"/>
      <jacoco:coverage destfile="${.exec.file}">
      <java classname="edu.nmsu.cs.scoring.RacingScore2" fork="true">
         <classpath path="bin"/>
         <arg value="5"/><arg value="20"/><arg value="53"/>
      </java>
      </jacoco:coverage>
   </target>

   <!-- tests if new jacoco report needs generated by checking if top report file
        (index.html) is newer than the run data file (jacoco.exec) -->
   <target name="checkReport">
      <uptodate property="report.notneeded" targetfile="${report}/index.html" srcfile="${.exec.file}" />
   </target>

   <!-- generate a new jacoco report from a new data file; only runs if needed -->
   <target name="jacocoreport" depends="jacocorun,checkReport" unless="report.notneeded">
      <jacoco:report>
         <executiondata>
            <file file="${.exec.file}"/>
         </executiondata>
         <structure name="iglooscore">
            <classfiles>
               <fileset dir="bin/edu/nmsu/cs/scoring"/>
            </classfiles>
            <sourcefiles encoding="UTF-8">
               <fileset dir="src/edu/nmsu/cs/scoring"/>
            </sourcefiles>
         </structure>
         <html destdir="${report}"/>
      </jacoco:report>
   </target>

   <!-- clean up by removing all generated files; do "ant clean" to start afresh -->
   <target name="clean">
      <delete>
         <fileset dir="." includes="*.class jacoco.exec"/>
      </delete>
      <delete dir="${results}" />
      <delete dir="${build-direction}"/>
   </target>

</project>

